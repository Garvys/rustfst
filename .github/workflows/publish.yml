name: Publish Rust Crates and Python Packages

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'testrustfst-v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
#  release:
#    name: Create Release
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@master
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          body: |
#            Changes in this Release
#          draft: false
#          prerelease: false
  deploy-python:
#    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Cache Openfst build
        uses: actions/cache@v2
        env:
          cache-name: cache-openfst-build
        with:
          path: openfst-1.7.2
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Build and publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          ./ci/native.sh
          . venv3/bin/activate
          pip install wheel twine
          python rustfst-python/setup.py sdist bdist_wheel
          twine upload testpypi dist/*