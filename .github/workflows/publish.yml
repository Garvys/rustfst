name: Publish

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'testrustfst-v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
          draft: false
          prerelease: false
  deploy-python:
    needs: release

    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-18.04
#        - macos-10.15

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.7' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: Build and publish
        env:
          CIBW_ENVIRONMENT: PATH="/root/.cargo/bin:$HOME/.cargo/bin:$PATH"
          CIBW_ENVIRONMENT_PASS_LINUX: PATH="/root/.cargo/bin:$HOME/.cargo/bin:$PATH"
          CIBW_BEFORE_BUILD: "which rustup || curl https://sh.rustup.rs -sSf | sh -s -- -y; . $HOME/.cargo/env; rustup toolchain add stable; rustup default stable; python -m pip install setuptools_rust; rustc --version; cargo --help"
        run: |
          python3.7 -m pip install wheel twine setuptools_rust cibuildwheel==2.5.0
          mkdir -p wheels
          python3.7 -m cibuildwheel --output-dir wheels rustfst-python
          python3.7 -m twine upload -u "__token__" -p ${{ secrets.TEST_PYPI_PASSWORD }} -r testpypi --verbose wheels/*
