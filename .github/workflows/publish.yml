name: Publish

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'testrustfst-v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
          draft: false
          prerelease: false
  deploy-python:
#    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Openfst build
        uses: actions/cache@v3
        env:
          cache-name: cache-openfst-build
        with:
          path: openfst-1.7.2
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Build and publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          .ci/native.sh
          python3.8 -m pip install wheel twine
          python3.8 rustfst-python/setup.py sdist bdist_wheel
          python3.8 -m twine upload testpypi dist/*