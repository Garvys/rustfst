{
    "arcsort_ilabel": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "arc_map_times": {
        "result": "0\t1\t12\t25\t1.5\n1\t1.5\n"
    }, 
    "raw": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "connect": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "state_map_arc_unique": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "state_map_arc_sum": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "arc_map_input_epsilon": {
        "result": "0\t1\t0\t25\n1\n"
    }, 
    "determinize": [
        {
            "det_type": "functional", 
            "result": "0\t1\t12\t25\n1\n"
        }, 
        {
            "det_type": "nonfunctional", 
            "result": "0\t1\t12\t25\n1\n"
        }, 
        {
            "det_type": "disambiguate", 
            "result": "0\t1\t12\t25\n1\n"
        }
    ], 
    "invert": {
        "result": "0\t1\t25\t12\n1\n"
    }, 
    "encode_decode": [
        {
            "encode_labels": true, 
            "result": "0\t1\t12\t25\n1\n", 
            "encode_weights": true
        }, 
        {
            "encode_labels": true, 
            "result": "0\t1\t12\t25\n1\n", 
            "encode_weights": false
        }, 
        {
            "encode_labels": false, 
            "result": "0\t1\t12\t25\n1\n", 
            "encode_weights": true
        }, 
        {
            "encode_labels": false, 
            "result": "0\t1\t12\t25\n1\n", 
            "encode_weights": false
        }
    ], 
    "arc_map_rmweight": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "arc_map_output_epsilon": {
        "result": "0\t1\t12\t0\n1\n"
    }, 
    "weight_pushing_final": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "topsort": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "fst_properties": {
        "accessible": true, 
        "not_acceptor": true, 
        "weighted": false, 
        "not_o_deterministic": false, 
        "no_o_epsilons": true, 
        "weighted_cycles": false, 
        "unweighted": true, 
        "epsilons": false, 
        "i_epsilons": false, 
        "unweighted_cycles": true, 
        "i_deterministic": true, 
        "no_epsilons": true, 
        "o_deterministic": true, 
        "not_coaccessible": false, 
        "o_label_sorted": true, 
        "not_i_deterministic": false, 
        "no_i_epsilons": true, 
        "not_top_sorted": false, 
        "string": true, 
        "not_string": false, 
        "not_o_label_sorted": false, 
        "o_epsilons": false, 
        "not_accessible": false, 
        "acceptor": false, 
        "coaccessible": true, 
        "cyclic": false, 
        "i_label_sorted": true, 
        "not_i_label_sorted": false, 
        "top_sorted": true, 
        "acyclic": true, 
        "initial_cyclic": false, 
        "initial_acyclic": true
    }, 
    "arc_map_identity": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "weight_type": "tropical", 
    "encode": [
        {
            "encode_labels": true, 
            "result": "0\t1\t1\t1\n1\t2\t2\t2\n2\n", 
            "encode_weights": true
        }, 
        {
            "encode_labels": true, 
            "result": "0\t1\t1\t1\n1\n", 
            "encode_weights": false
        }, 
        {
            "encode_labels": false, 
            "result": "0\t1\t1\t25\n1\t2\t2\t0\n2\n", 
            "encode_weights": true
        }, 
        {
            "encode_labels": false, 
            "result": "0\t1\t1\t25\n1\n", 
            "encode_weights": false
        }
    ], 
    "project_output": {
        "result": "0\t1\t25\t25\n1\n"
    }, 
    "weight_pushing_initial": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "project_input": {
        "result": "0\t1\t12\t12\n1\n"
    }, 
    "reverse": {
        "result": "0\t2\t0\t0\n1\n2\t1\t12\t25\n"
    }, 
    "arc_map_invert": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "shortest_distance": {
        "result": [
            0.0, 
            0.0
        ]
    }, 
    "rmepsilon": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "name": "fst_001", 
    "arcsort_olabel": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "arc_map_plus": {
        "result": "0\t1\t12\t25\n1\n"
    }, 
    "arc_map_quantize": {
        "result": "0\t1\t12\t25\n1\n"
    }
}